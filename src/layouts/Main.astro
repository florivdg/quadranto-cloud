---
import { Package2 } from 'lucide-vue-next'
import Notifications from '@/components/Notifications.vue'
import UserMenu from '@/components/UserMenu.vue'
import Search from '@/components/Search.vue'
import SidebarMenu from '@/components/sidebar/Menu.vue'
import SidebarMenuMobile from '@/components/sidebar/MobileMenu.vue'
import type { Project } from '@/db/schema'

interface Props {
  heading?: string
  scrollable?: boolean
  addPadding?: boolean
  initialProjects?: Project[]
}

const { heading, scrollable, initialProjects } = Astro.props
let { addPadding } = Astro.props
if (typeof addPadding === 'undefined') addPadding = true

const { url } = Astro.request
const currentPath = new URL(url).pathname
---

<div
  class="grid min-h-screen w-full md:grid-cols-[220px_1fr] lg:grid-cols-[280px_1fr]"
>
  <div class="hidden border-r bg-muted/40 md:block">
    <div class="flex h-full max-h-screen flex-col gap-2">
      <div class="flex h-14 items-center border-b px-4 lg:h-[60px] lg:px-6">
        <a href="/" class="flex items-center gap-2 font-semibold">
          <Package2 class="h-6 w-6" />
          <span class="sr-only">Go to Dashboard</span>
          <span aria-hidden="true">quadranto.cloud</span>
        </a>
        <Notifications />
      </div>
      <div class="flex-1">
        <SidebarMenu
          activePath={currentPath}
          initialProjects={initialProjects}
        />
      </div>
    </div>
  </div>
  <div class="h-full max-h-screen">
    <div class="flex h-full max-h-screen flex-col">
      <header
        class="flex h-14 items-center gap-4 border-b bg-muted/40 px-4 lg:h-[60px] lg:px-6"
      >
        <SidebarMenuMobile
          client:load
          activePath={currentPath}
          initialProjects={initialProjects}
        />
        <div class="w-full flex-1">
          <Search />
        </div>
        <UserMenu client:load />
      </header>
      <main
        class:list={[
          'flex-1',
          addPadding ? 'p-4 lg:p-6' : '',
          scrollable ? 'overflow-y-auto' : 'overflow-hidden',
        ]}
      >
        {
          heading ? (
            <div>
              <h1 class="mb-2 text-lg font-semibold md:text-2xl">{heading}</h1>
              <slot name="after-heading" />
            </div>
          ) : undefined
        }
        <slot />
      </main>
    </div>
  </div>
</div>
